generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  role     Role      @default(USER)
  username String    @unique
  password String
  Comment  Comment[]
  Like     Like[]
}

model Post {
  id         Int          @id @default(autoincrement())
  title      String       @unique
  content    String       @unique
  createdAt  DateTime     @default(now())
  comments   Comment[]
  tags       Tag[]
  likes      Like[]
  TagOnPosts TagOnPosts[]
}

model TagOnPosts {
  id     Int  @id @default(autoincrement())
  post   Post @relation(fields: [postId], references: [id], onDelete: SetDefault, onUpdate: Cascade)
  postId Int
  tag    Tag? @relation(fields: [tagId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  tagId  Int
}

model Comment {
  id      Int    @id @default(autoincrement())
  message String
  User    User?  @relation(fields: [userId], references: [id])
  Post    Post?  @relation(fields: [postId], references: [id])
  postId  Int?
  userId  Int?
}

model Tag {
  id         Int          @id @default(autoincrement())
  name       String
  Post       Post?        @relation(fields: [postId], references: [id])
  postId     Int?
  TagOnPosts TagOnPosts[]
}

model Like {
  id     Int   @id @default(autoincrement())
  Post   Post? @relation(fields: [postId], references: [id])
  postId Int?
  userId Int
  User   User  @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}
